package GUI;

import BL.PatientWorkHandler;
import BL.PatientsHandler;
import MODEL.PatientWork.Consulting;
import MODEL.PatientWork.ConsultingRecommended;
import MODEL.PatientWork.LabTest;
import MODEL.PatientWork.LabTestRecommended;
import MODEL.PatientWork.Medication;
import MODEL.PatientWork.MedicationsPrescribed;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 *
 * @author Karlo
 */
public class PaymentFrame extends javax.swing.JFrame {
    PatientsHandler patientsHandler=new PatientsHandler();
    PatientWorkHandler patientWorkHandler=new PatientWorkHandler();
    List<LabTestRecommended> unpaidLabTest;
    List<MedicationsPrescribed> unpaidMedications;
    List<ConsultingRecommended> unpaidConsultings;
    List<LabTest> labTests=patientWorkHandler.getAllLabTests();
    List<Medication> medications=patientWorkHandler.getAllMedications();
    List<Consulting> consultings=patientWorkHandler.getAllConsultings();

    /**
     * Creates new form PaymentFrame
     */
    public PaymentFrame() {
        initComponents();
        showLabTests();
        showMedications();
        showConsultings();
        txtAlertConsulting.setVisible(false);
        txtAlertLabTest.setVisible(false);
        txtAlertMedication.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listLabtests = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        btnLabTestPay = new javax.swing.JButton();
        txtAlertLabTest = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listMedications = new javax.swing.JList<>();
        btnMedicationsPay = new javax.swing.JButton();
        txtAlertMedication = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listConsulting = new javax.swing.JList<>();
        txtConsultingPay = new javax.swing.JButton();
        txtAlertConsulting = new javax.swing.JLabel();

        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jScrollPane1.setViewportView(listLabtests);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Lab Tests Unpaid");

        btnLabTestPay.setText("Pay");
        btnLabTestPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLabTestPayActionPerformed(evt);
            }
        });

        txtAlertLabTest.setForeground(new java.awt.Color(255, 0, 0));
        txtAlertLabTest.setText("Odaberite lab test!");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtAlertLabTest)
                        .addGap(18, 18, 18)
                        .addComponent(btnLabTestPay))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel1))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(41, 41, 41)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLabTestPay)
                    .addComponent(txtAlertLabTest))
                .addGap(12, 12, 12))
        );

        jTabbedPane1.addTab("Lab Tests", jPanel1);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setText("Medications Unpaid");

        jScrollPane2.setViewportView(listMedications);

        btnMedicationsPay.setText("Pay");
        btnMedicationsPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedicationsPayActionPerformed(evt);
            }
        });

        txtAlertMedication.setForeground(new java.awt.Color(255, 0, 0));
        txtAlertMedication.setText("Odaberite medication!");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 38, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtAlertMedication)
                        .addGap(18, 18, 18)
                        .addComponent(btnMedicationsPay)))
                .addGap(33, 33, 33))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMedicationsPay)
                    .addComponent(txtAlertMedication))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Medications", jPanel2);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel3.setText("Consultiong Unpaid");

        listConsulting.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(listConsulting);

        txtConsultingPay.setText("Pay");
        txtConsultingPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConsultingPayActionPerformed(evt);
            }
        });

        txtAlertConsulting.setForeground(new java.awt.Color(255, 0, 0));
        txtAlertConsulting.setText("Odaberite consulting!");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtAlertConsulting)
                        .addGap(18, 18, 18)
                        .addComponent(txtConsultingPay))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(181, 181, 181)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtConsultingPay)
                    .addComponent(txtAlertConsulting))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Consultings", jPanel3);

        getContentPane().add(jTabbedPane1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLabTestPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLabTestPayActionPerformed
        // TODO add your handling code here:
        int idselected=listLabtests.getSelectedIndex();
        if (idselected==-1) {
            txtAlertLabTest.setVisible(true);
        }
        else{
            txtAlertLabTest.setVisible(false);
            int idLabTestRecomended=unpaidLabTest.get(idselected).getIDLabtestRecommended();
            patientWorkHandler.payLabTest(idLabTestRecomended);
            showLabTests();
        }
    }//GEN-LAST:event_btnLabTestPayActionPerformed

    private void btnMedicationsPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedicationsPayActionPerformed
        // TODO add your handling code here:
        int idselected=listMedications.getSelectedIndex();
        if (idselected==-1) {
            txtAlertMedication.setVisible(true);
        }
        else{
            txtAlertMedication.setVisible(false);
            int idMedicationPrescribed=unpaidMedications.get(idselected).getIDMedicationsPrescribed();
            patientWorkHandler.payMedication(idMedicationPrescribed);
            showMedications();
        }
    }//GEN-LAST:event_btnMedicationsPayActionPerformed

    private void txtConsultingPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConsultingPayActionPerformed
        // TODO add your handling code here:
        int idselected=listConsulting.getSelectedIndex();
        if (idselected==-1) {
            txtAlertConsulting.setVisible(true);
        }
        else{
            txtAlertConsulting.setVisible(false);
            int idConsultingRecommended=unpaidConsultings.get(idselected).getIDConsultingRecommended();
            patientWorkHandler.payConsulting(idConsultingRecommended);
            showConsultings();
        }
    }//GEN-LAST:event_txtConsultingPayActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaymentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaymentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaymentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaymentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PaymentFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLabTestPay;
    private javax.swing.JButton btnMedicationsPay;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JList<String> listConsulting;
    private javax.swing.JList<String> listLabtests;
    private javax.swing.JList<String> listMedications;
    private javax.swing.JLabel txtAlertConsulting;
    private javax.swing.JLabel txtAlertLabTest;
    private javax.swing.JLabel txtAlertMedication;
    private javax.swing.JButton txtConsultingPay;
    // End of variables declaration//GEN-END:variables

    private void showLabTests() {
        listLabtests.removeAll();
        unpaidLabTest=patientWorkHandler.getUnpaidLabTests();
        DefaultListModel mod = new DefaultListModel();
        listLabtests.setModel(mod);
        String name;
        for (int i = 0; i < unpaidLabTest.size(); i++) {
            name=patientsHandler.getPatient(unpaidLabTest.get(i).getPatientID()).getFirstName()+" - "+patientWorkHandler.getLabTest(unpaidLabTest.get(i).getLabTestID()).getLabTestName();
            mod.addElement(name);
        }
    }

    private void showMedications() {
        listMedications.removeAll();
        unpaidMedications=patientWorkHandler.getUnpaidMedications();
        DefaultListModel mod = new DefaultListModel();
        listMedications.setModel(mod);
        String name;
        for (int i = 0; i < unpaidMedications.size(); i++) {
            name=patientsHandler.getPatient(unpaidMedications.get(i).getPatientID()).getFirstName()+" - "+patientWorkHandler.getMedication(unpaidMedications.get(i).getMedicationID()).getMedicationName();
            mod.addElement(name);
        }
    }

    private void showConsultings() {
        listConsulting.removeAll();
        unpaidConsultings=patientWorkHandler.getUnpaidConsulting();
        DefaultListModel mod = new DefaultListModel();
        listConsulting.setModel(mod);
        String name;
        for (int i = 0; i < unpaidConsultings.size(); i++) {
            name=patientsHandler.getPatient(unpaidConsultings.get(i).getPatientID()).getFirstName()+" - "+patientWorkHandler.getConsulting(unpaidConsultings.get(i).getConsultingID()).getConsultingName();
            mod.addElement(name);
        }
    }
}

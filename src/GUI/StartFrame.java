package GUI;

import BL.ComprehensiveRegFormHandler;
import BL.MedicalPersonnelHandler;
import BL.MiniRegFormHandler;
import BL.PatientWorkHandler;
import BL.PatientsHandler;
import MODEL.MedicalPersonnel.Doctor;
import MODEL.Mini.MiniRegForm;
import MODEL.Patient.Patient;
import MODEL.PatientWork.*;
import MODEL.PatientWork.LabTest;
import MODEL.PatientWork.LabTestRecommended;
import MODEL.PatientWork.Medication;
import com.sun.xml.internal.ws.util.StringUtils;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.Calendar;
import java.sql.Date;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 *
 * @author Karlo
 */
public class StartFrame extends javax.swing.JFrame {

    ComprehensiveRegFormHandler comprehensiveRegFormHandler = new ComprehensiveRegFormHandler();
    MedicalPersonnelHandler medicalPersonnelHandler = new MedicalPersonnelHandler();
    PatientWorkHandler patientWorkHandler=new PatientWorkHandler();
    PatientsHandler patientsHandler = new PatientsHandler();
    MiniRegFormHandler miniRegFormHandler=new MiniRegFormHandler();
    List<Doctor> doctorsList = medicalPersonnelHandler.getAllDoctors();
    private int DoctorID;
    List<Patient> patientsWithNoDoctor = patientsHandler.getPatientsWithNoDoctor();
    List<MiniRegForm> list=new ArrayList<MiniRegForm>();
    
    
    List<LabTestRecommended> unpaidLabTest=patientWorkHandler.getUnpaidLabTests();
    List<MedicationsPrescribed> unpaidMedications=patientWorkHandler.getUnpaidMedications();
    List<ConsultingRecommended> unpaidConsultings=patientWorkHandler.getUnpaidConsulting();
    List<LabTest> labTests=patientWorkHandler.getAllLabTests();
    List<Medication> medications=patientWorkHandler.getAllMedications();
    List<Consulting> consultings=patientWorkHandler.getAllConsultings();

    /**
     * Creates new form StartFrame
     */
    public StartFrame() {
        initComponents();
        showManagment();
        showUncompletedForms();
        txtAlertIDDoctor.setVisible(false);
        txtAlertPatient.setVisible(false);
        txtAlertSetPatientToDoctor.setVisible(false);
        txtAlertWrongID.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnMiniRegForm = new javax.swing.JButton();
        btnComprehensiveRegForm = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        listMiniRegWithNoComp = new javax.swing.JList<>();
        jLabel9 = new javax.swing.JLabel();
        btnComplete = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnLoadDoctor = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtIdDoctor = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        listPatient = new javax.swing.JList<>();
        txtWelcome = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnGetRegistrationForm = new javax.swing.JButton();
        txtPatientName = new javax.swing.JLabel();
        txtBirthDate = new javax.swing.JLabel();
        btnAddDiagnose = new javax.swing.JButton();
        btnPrescribeMedication = new javax.swing.JButton();
        btnAddLabTest = new javax.swing.JButton();
        btnRecommendConsulting = new javax.swing.JButton();
        btnViewDiagnoseHistory = new javax.swing.JButton();
        btnMedicationHistory = new javax.swing.JButton();
        btnViewLabTestHistory = new javax.swing.JButton();
        btnViewConsultingHistory = new javax.swing.JButton();
        btnAppointment = new javax.swing.JButton();
        btnAppointmentHistory = new javax.swing.JButton();
        txtAlertIDDoctor = new javax.swing.JLabel();
        txtAlertPatient = new javax.swing.JLabel();
        txtAlertWrongID = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnReportsDaily = new javax.swing.JButton();
        btnReportsWeekly = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listSetPatient = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        ListReportsDoctors = new javax.swing.JList<>();
        btnSet = new javax.swing.JButton();
        btnPay = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtAlertSetPatientToDoctor = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel1.setText("Reception");

        btnMiniRegForm.setText("Mini Registration Form");
        btnMiniRegForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMiniRegFormActionPerformed(evt);
            }
        });

        btnComprehensiveRegForm.setText("Comprehensive Registration Form");
        btnComprehensiveRegForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComprehensiveRegFormActionPerformed(evt);
            }
        });

        jScrollPane4.setViewportView(listMiniRegWithNoComp);

        jLabel9.setText("Complete Registration Form");

        btnComplete.setText("Select");
        btnComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(btnMiniRegForm, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(133, 133, 133)
                        .addComponent(btnComprehensiveRegForm))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(jLabel9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnComplete)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(170, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnComprehensiveRegForm, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMiniRegForm, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnComplete)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Reception", jPanel1);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Insert your ID:");

        btnLoadDoctor.setText("Load Data");
        btnLoadDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadDoctorActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel3.setText("Doctor");

        listPatient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listPatientMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listPatient);

        txtWelcome.setText("Welcome ");

        jLabel5.setText("Patient Name:");

        jLabel6.setText("Birth Date:");

        btnGetRegistrationForm.setText("Get Registration Form");
        btnGetRegistrationForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetRegistrationFormActionPerformed(evt);
            }
        });

        btnAddDiagnose.setText("Add Diagnose");
        btnAddDiagnose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDiagnoseActionPerformed(evt);
            }
        });

        btnPrescribeMedication.setText("Prescribe Medication");
        btnPrescribeMedication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrescribeMedicationActionPerformed(evt);
            }
        });

        btnAddLabTest.setText("Add Lab Test");
        btnAddLabTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddLabTestActionPerformed(evt);
            }
        });

        btnRecommendConsulting.setText("Recommend Consulting");
        btnRecommendConsulting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecommendConsultingActionPerformed(evt);
            }
        });

        btnViewDiagnoseHistory.setText("View Diagnose History");
        btnViewDiagnoseHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDiagnoseHistoryActionPerformed(evt);
            }
        });

        btnMedicationHistory.setText("View Medication History");
        btnMedicationHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedicationHistoryActionPerformed(evt);
            }
        });

        btnViewLabTestHistory.setText("View Lab Test History");
        btnViewLabTestHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewLabTestHistoryActionPerformed(evt);
            }
        });

        btnViewConsultingHistory.setText("View Consulting History");
        btnViewConsultingHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewConsultingHistoryActionPerformed(evt);
            }
        });

        btnAppointment.setText("Schedule Appointment");
        btnAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAppointmentActionPerformed(evt);
            }
        });

        btnAppointmentHistory.setText("Appointment History");
        btnAppointmentHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAppointmentHistoryActionPerformed(evt);
            }
        });

        txtAlertIDDoctor.setForeground(new java.awt.Color(255, 0, 0));
        txtAlertIDDoctor.setText("Insert ID!");

        txtAlertPatient.setForeground(new java.awt.Color(204, 51, 0));
        txtAlertPatient.setText("Select Patient!");

        txtAlertWrongID.setForeground(new java.awt.Color(255, 51, 51));
        txtAlertWrongID.setText("Wrong ID!");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAlertIDDoctor)
                            .addComponent(txtAlertWrongID)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txtAlertPatient))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnLoadDoctor)
                            .addComponent(txtIdDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtWelcome)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPatientName)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtBirthDate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 347, Short.MAX_VALUE)
                                .addComponent(btnGetRegistrationForm))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAppointment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAddDiagnose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPrescribeMedication, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAddLabTest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRecommendConsulting, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnViewConsultingHistory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnViewLabTestHistory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnMedicationHistory, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                            .addComponent(btnViewDiagnoseHistory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAppointmentHistory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(43, 43, 43))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txtWelcome))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(txtAlertWrongID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAlertIDDoctor)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtIdDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtPatientName))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnLoadDoctor)
                        .addComponent(jLabel6)
                        .addComponent(btnGetRegistrationForm)
                        .addComponent(txtBirthDate))
                    .addComponent(txtAlertPatient, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddDiagnose)
                            .addComponent(btnViewDiagnoseHistory))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnPrescribeMedication)
                            .addComponent(btnMedicationHistory))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddLabTest)
                            .addComponent(btnViewLabTestHistory))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRecommendConsulting)
                            .addComponent(btnViewConsultingHistory))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAppointment)
                            .addComponent(btnAppointmentHistory))))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Doctor", jPanel2);

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel4.setText("Managment");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setText("Reports");

        btnReportsDaily.setText("Daily");
        btnReportsDaily.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportsDailyActionPerformed(evt);
            }
        });

        btnReportsWeekly.setText("Weekly/Monthly");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setText("Set Doctor to Patient");

        jScrollPane2.setViewportView(listSetPatient);

        jScrollPane3.setViewportView(ListReportsDoctors);

        btnSet.setText("Set");
        btnSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetActionPerformed(evt);
            }
        });

        btnPay.setText("Manage Payment");
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });

        jLabel10.setText("Patient");

        jLabel11.setText("Doctor");

        txtAlertSetPatientToDoctor.setForeground(new java.awt.Color(255, 0, 0));
        txtAlertSetPatientToDoctor.setText("Odaberite patienta i doctora!");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtAlertSetPatientToDoctor)
                        .addGap(43, 43, 43)
                        .addComponent(btnSet))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                            .addGap(123, 123, 123)
                            .addComponent(btnReportsDaily, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(93, 93, 93)
                            .addComponent(btnReportsWeekly))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel4))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                            .addGap(61, 61, 61)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8)
                                .addComponent(jLabel7)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                            .addGap(80, 80, 80)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel11)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(btnPay, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(36, 36, 36)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReportsDaily)
                    .addComponent(btnReportsWeekly))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(btnPay))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addGap(4, 4, 4)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSet)
                    .addComponent(txtAlertSetPatientToDoctor))
                .addContainerGap(82, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Managment", jPanel3);

        getContentPane().add(jTabbedPane1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMiniRegFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMiniRegFormActionPerformed
        
        
        MiniRegistrationFrame mini = new MiniRegistrationFrame();
        mini.setVisible(true);
    }//GEN-LAST:event_btnMiniRegFormActionPerformed

    private void btnComprehensiveRegFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComprehensiveRegFormActionPerformed
        // TODO add your handling code here:
        ComprehensiveRegistrationFrame comp = new ComprehensiveRegistrationFrame();
        comp.setVisible(true);
    }//GEN-LAST:event_btnComprehensiveRegFormActionPerformed

    private void btnLoadDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadDoctorActionPerformed
        // TODO add your handling code here:
        if (txtIdDoctor.getText().isEmpty()) {
            txtAlertIDDoctor.setVisible(true);
        }
        else if(loadPatients()){
            DoctorID = Integer.parseInt(txtIdDoctor.getText());
            loadPatientsFromDoctor();
            txtAlertIDDoctor.setVisible(false);
            txtAlertWrongID.setVisible(false);
            txtWelcome.setText("Welcome dr. " + patientsHandler.getPerson(medicalPersonnelHandler.getMedicalPersonnel(medicalPersonnelHandler.getDoctor(DoctorID).getIDDoctor()).getPersonID()).getFirstName());
        }else{
            txtAlertWrongID.setVisible(true);
            txtAlertIDDoctor.setVisible(false);
        }
    }//GEN-LAST:event_btnLoadDoctorActionPerformed

    private void listPatientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listPatientMouseClicked
        // TODO add your handling code here:

        if (txtIdDoctor.getText().isEmpty()) {
            txtAlertIDDoctor.setVisible(true);
        }else{
            txtAlertIDDoctor.setVisible(false);
            txtAlertPatient.setVisible(false);
            int selectedIndex = listPatient.getSelectedIndex();
            List<Patient> patientList = patientsHandler.getPatientsByDoctor(DoctorID);
            txtPatientName.setText(patientList.get(selectedIndex).getFirstName());
            txtBirthDate.setText(patientList.get(selectedIndex).getBirthDate().toString());
        }
    }//GEN-LAST:event_listPatientMouseClicked

    private void btnAddDiagnoseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDiagnoseActionPerformed
        // TODO add your handling code here:
        if (clickedOnPatient()) {
            AddDiagnose addDiagnose = new AddDiagnose(getSelectedPatientID());
            addDiagnose.setVisible(true);
        }
        
    }//GEN-LAST:event_btnAddDiagnoseActionPerformed

    private void btnPrescribeMedicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrescribeMedicationActionPerformed
        // TODO add your handling code here:
        
        if (clickedOnPatient()) {
            PrescribeMedication prescribeMedication = new PrescribeMedication(getSelectedPatientID());
        prescribeMedication.setVisible(true);
        }
    }//GEN-LAST:event_btnPrescribeMedicationActionPerformed

    private void btnAddLabTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddLabTestActionPerformed
        // TODO add your handling code here:
        
        if (clickedOnPatient()) {
            AddLabTest addLabTest = new AddLabTest(getSelectedPatientID());
        addLabTest.setVisible(true);
        }
    }//GEN-LAST:event_btnAddLabTestActionPerformed

    private void btnRecommendConsultingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecommendConsultingActionPerformed
        // TODO add your handling code here:
        
        if (clickedOnPatient()) {
            RecommendConsulting recommendConsulting = new RecommendConsulting(getSelectedPatientID());
        recommendConsulting.setVisible(true);
        }
    }//GEN-LAST:event_btnRecommendConsultingActionPerformed

    private void btnViewDiagnoseHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDiagnoseHistoryActionPerformed
        // TODO add your handling code here:
        
        if (clickedOnPatient()) {
            DiagnoseHistory diagnoseHistory = new DiagnoseHistory(getSelectedPatientID());
        diagnoseHistory.setVisible(true);
        }
    }//GEN-LAST:event_btnViewDiagnoseHistoryActionPerformed

    private void btnMedicationHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedicationHistoryActionPerformed
        // TODO add your handling code here:
        
        if (clickedOnPatient()) {
            MedicationHistory medicationHistory = new MedicationHistory(getSelectedPatientID());
        medicationHistory.setVisible(true);
        }
    }//GEN-LAST:event_btnMedicationHistoryActionPerformed

    private void btnViewLabTestHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewLabTestHistoryActionPerformed
        // TODO add your handling code here:
        
        if (clickedOnPatient()) {
            LabTestHistory labTestHistory = new LabTestHistory(getSelectedPatientID());
        labTestHistory.setVisible(true);
        }
    }//GEN-LAST:event_btnViewLabTestHistoryActionPerformed

    private void btnViewConsultingHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewConsultingHistoryActionPerformed
        // TODO add your handling code here:
        
        if (clickedOnPatient()) {
            ConsultingHistory consultingHistory = new ConsultingHistory(getSelectedPatientID());
        consultingHistory.setVisible(true);
        }
    }//GEN-LAST:event_btnViewConsultingHistoryActionPerformed

    private void btnAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAppointmentActionPerformed
        // TODO add your handling code here:
        
        if (clickedOnPatient()) {
            ScheduleAppointment scheduleAppointment = new ScheduleAppointment(getSelectedPatientID());
        scheduleAppointment.setVisible(true);
        }
    }//GEN-LAST:event_btnAppointmentActionPerformed

    private void btnAppointmentHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAppointmentHistoryActionPerformed
        // TODO add your handling code here:
        
        if (clickedOnPatient()) {
            AppointmentHistory appointmentHistory = new AppointmentHistory(getSelectedPatientID());
        appointmentHistory.setVisible(true);
        }
    }//GEN-LAST:event_btnAppointmentHistoryActionPerformed

    private void btnGetRegistrationFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetRegistrationFormActionPerformed
        // TODO add your handling code here:
        if (clickedOnPatient()) {
            int patientID = getSelectedPatientID();

        if (checkIfComprehensiveExist()) {
            ShowComprehensiveRegForm showComprehensiveRegForm = new ShowComprehensiveRegForm(patientID);
            showComprehensiveRegForm.setVisible(true);
        } else {
            ShowMiniRegistarForm showMiniRegistarForm = new ShowMiniRegistarForm(getSelectedPatientID());
            showMiniRegistarForm.setVisible(true);
        }
        }
    }//GEN-LAST:event_btnGetRegistrationFormActionPerformed

    private void btnSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetActionPerformed
        // TODO add your handling code here:
        if (listSetPatient.getSelectedIndex()==-1||ListReportsDoctors.getSelectedIndex()==-1) {
            txtAlertSetPatientToDoctor.setVisible(true);
        }
        else{
            txtAlertSetPatientToDoctor.setVisible(false);
            setDoctorToPatient();
            loadPatientsWithNoDoctor();
        }
    }//GEN-LAST:event_btnSetActionPerformed

    private void btnCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompleteActionPerformed
        // TODO add your handling code here:
        int selected=listMiniRegWithNoComp.getSelectedIndex();
        int idpatient=list.get(selected).getPatientID();
        ComprehensiveRegistrationFrame comprehensiveRegistrationFrame=new ComprehensiveRegistrationFrame(idpatient);
        comprehensiveRegistrationFrame.setVisible(true);
    }//GEN-LAST:event_btnCompleteActionPerformed

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
        // TODO add your handling code here:
        PaymentFrame paymentFrame=new PaymentFrame();
        paymentFrame.setVisible(true);
    }//GEN-LAST:event_btnPayActionPerformed

    private void btnReportsDailyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportsDailyActionPerformed
        // TODO add your handling code here:
        DailyReportFrame dailyReportFrame=new DailyReportFrame();
        dailyReportFrame.setVisible(true);
    }//GEN-LAST:event_btnReportsDailyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StartFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> ListReportsDoctors;
    private javax.swing.JButton btnAddDiagnose;
    private javax.swing.JButton btnAddLabTest;
    private javax.swing.JButton btnAppointment;
    private javax.swing.JButton btnAppointmentHistory;
    private javax.swing.JButton btnComplete;
    private javax.swing.JButton btnComprehensiveRegForm;
    private javax.swing.JButton btnGetRegistrationForm;
    private javax.swing.JButton btnLoadDoctor;
    private javax.swing.JButton btnMedicationHistory;
    private javax.swing.JButton btnMiniRegForm;
    private javax.swing.JButton btnPay;
    private javax.swing.JButton btnPrescribeMedication;
    private javax.swing.JButton btnRecommendConsulting;
    private javax.swing.JButton btnReportsDaily;
    private javax.swing.JButton btnReportsWeekly;
    private javax.swing.JButton btnSet;
    private javax.swing.JButton btnViewConsultingHistory;
    private javax.swing.JButton btnViewDiagnoseHistory;
    private javax.swing.JButton btnViewLabTestHistory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JList<String> listMiniRegWithNoComp;
    private javax.swing.JList<String> listPatient;
    private javax.swing.JList<String> listSetPatient;
    private javax.swing.JLabel txtAlertIDDoctor;
    private javax.swing.JLabel txtAlertPatient;
    private javax.swing.JLabel txtAlertSetPatientToDoctor;
    private javax.swing.JLabel txtAlertWrongID;
    private javax.swing.JLabel txtBirthDate;
    private javax.swing.JTextField txtIdDoctor;
    private javax.swing.JLabel txtPatientName;
    private javax.swing.JLabel txtWelcome;
    // End of variables declaration//GEN-END:variables

    private boolean loadPatients() {
        List<Integer> doctorsIdList=new ArrayList<>();
        for (Doctor doctor : medicalPersonnelHandler.getAllDoctors()) {
            doctorsIdList.add(doctor.getIDDoctor());
        }
        for (Integer id : doctorsIdList) {
            if (Integer.parseInt(txtIdDoctor.getText())==id ) {
                return true;
            }
        }
        return false;
    }
    private void loadPatientsFromDoctor() {
        List<Patient> list = patientsHandler.getPatientsByDoctor(DoctorID);
        DefaultListModel mod = new DefaultListModel();

        listPatient.setModel(mod);

        for (int i = 0; i < list.size(); i++) {
            mod.addElement(list.get(i).getFirstName() + " " + list.get(i).getSurname());
        }
    }

    private int getSelectedPatientID() {
        int selectedIndex = listPatient.getSelectedIndex();
        List<Patient> patientList = patientsHandler.getPatientsByDoctor(DoctorID);
        return patientList.get(selectedIndex).getIDPatient();
    }

    private boolean checkIfComprehensiveExist() {
        int checkIfExist = comprehensiveRegFormHandler.checkIfExistComprehensive(getSelectedPatientID());
        System.out.println(checkIfExist);
        if (checkIfExist > 0) {
            return true;
        } else {
            return false;
        }

    }

    private void showManagment() {
        loadPatientsWithNoDoctor();
        LoadDoctors();
    }

    private void loadPatientsWithNoDoctor() {
        patientsWithNoDoctor = patientsHandler.getPatientsWithNoDoctor();
        listSetPatient.removeAll();
        DefaultListModel mod = new DefaultListModel();
        listSetPatient.setModel(mod);

        for (int i = 0; i < patientsWithNoDoctor.size(); i++) {
            mod.addElement(patientsWithNoDoctor.get(i).getFirstName() + " " + patientsWithNoDoctor.get(i).getSurname());
        }
    }

    private void LoadDoctors() {
        DefaultListModel mod = new DefaultListModel();
        ListReportsDoctors.setModel(mod);
        String name;
        for (int i = 0; i < doctorsList.size(); i++) {
            name=patientsHandler.getPerson(medicalPersonnelHandler.getMedicalPersonnel(medicalPersonnelHandler.getDoctor(doctorsList.get(i).getIDDoctor()).getIDDoctor()).getPersonID()).getFirstName();
            mod.addElement(name);
        }
    }

    private void setDoctorToPatient() {
        int patientSelected=listSetPatient.getSelectedIndex();
        int idpatient=patientsWithNoDoctor.get(patientSelected).getIDPatient();
        int doctorSelected=ListReportsDoctors.getSelectedIndex();
        int iddoctor=doctorsList.get(doctorSelected).getIDDoctor();
        
        medicalPersonnelHandler.assignPatientToDoctor(idpatient, iddoctor);
        
    }

    private void showUncompletedForms() {
        List<MiniRegForm> miniRegFormListAll=miniRegFormHandler.getAllMiniRegForms();
        for (int i = 0; i < miniRegFormListAll.size(); i++) {
            if (comprehensiveRegFormHandler.checkIfExistComprehensive(miniRegFormListAll.get(i).getPatientID())==0) {
                list.add(miniRegFormListAll.get(i));
            }
        }
        DefaultListModel mod = new DefaultListModel();
        listMiniRegWithNoComp.setModel(mod);
        for (int i = 0; i < list.size(); i++) {
            mod.addElement(patientsHandler.getPatient(list.get(i).getPatientID()).getFirstName());
        }
        
    }
    private boolean clickedOnPatient(){
        if (listPatient.getSelectedIndex()==-1) {
            txtAlertPatient.setVisible(true);
            return false;
        }
        else {
            txtAlertPatient.setVisible(false);
            return true;
        }
    }

    private boolean isNumeric(String text) {
        try  
            {  
                int d = Integer.parseInt(text);  
            }  
        catch(NumberFormatException nfe)  
            {  
                return false;  
            }  
        return true;  
    }
    
}

    
    

    

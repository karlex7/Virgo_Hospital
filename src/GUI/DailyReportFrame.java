package GUI;

import BL.ComprehensiveRegFormHandler;
import BL.MedicalPersonnelHandler;
import BL.MiniRegFormHandler;
import BL.PatientWorkHandler;
import BL.PatientsHandler;
import MODEL.MedicalPersonnel.*;
import MODEL.Patient.*;
import MODEL.PatientWork.*;
import java.sql.Date;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import MODEL.Mini.*;

/**
 *
 * @author Karlo
 */
public class DailyReportFrame extends javax.swing.JFrame {
    MedicalPersonnelHandler medicalPersonnelHandler=new MedicalPersonnelHandler();
    PatientsHandler patientsHandler=new PatientsHandler();
    PatientWorkHandler patientWorkHandler=new PatientWorkHandler();
    MiniRegFormHandler miniRegFormHandler=new MiniRegFormHandler();
    ComprehensiveRegFormHandler comprehensiveRegFormHandler=new ComprehensiveRegFormHandler();
    private JLabel[] labels=new JLabel[7];

    /**
     * Creates new form DailyReportFrame
     */
    public DailyReportFrame() {
        initComponents();
        showDoctors();
        labels[0]=txtNo1;
        labels[1]=txtNo2;
        labels[2]=txtNo3;
        labels[3]=txtNo4;
        labels[4]=txtNo5;
        labels[5]=txtNo6;
        labels[6]=txtNo7;
        showNoFolowUp();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listDoctors = new javax.swing.JList<>();
        txtDate1 = new javax.swing.JLabel();
        txtDate2 = new javax.swing.JLabel();
        txtDate3 = new javax.swing.JLabel();
        txtDate4 = new javax.swing.JLabel();
        txtDate5 = new javax.swing.JLabel();
        txtDate6 = new javax.swing.JLabel();
        txtDate7 = new javax.swing.JLabel();
        txtNo1 = new javax.swing.JLabel();
        txtNo2 = new javax.swing.JLabel();
        txtNo3 = new javax.swing.JLabel();
        txtNo4 = new javax.swing.JLabel();
        txtNo5 = new javax.swing.JLabel();
        txtNo6 = new javax.swing.JLabel();
        txtNo7 = new javax.swing.JLabel();

        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setText("No. of new and follow up patients");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(445, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(430, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("No. of new and follow up patients", jPanel2);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel3.setText("Summary of fees charged");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(540, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(430, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Summary of fees charged", jPanel3);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Number of patients seen by variouse doctors");

        listDoctors.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listDoctorsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listDoctors);

        txtDate1.setText("1");

        txtDate2.setText("2");

        txtDate3.setText("3");

        txtDate4.setText("4");

        txtDate5.setText("5");

        txtDate6.setText("6");

        txtDate7.setText("7");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(txtDate1)
                                .addGap(151, 151, 151))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDate7)
                                    .addComponent(txtDate6)
                                    .addComponent(txtDate5)
                                    .addComponent(txtDate4)
                                    .addComponent(txtDate3)
                                    .addComponent(txtDate2))
                                .addGap(20, 20, 20)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtNo7)
                            .addComponent(txtNo6)
                            .addComponent(txtNo5)
                            .addComponent(txtNo4)
                            .addComponent(txtNo3)
                            .addComponent(txtNo2)
                            .addComponent(txtNo1))))
                .addContainerGap(317, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDate1)
                            .addComponent(txtNo1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDate2)
                            .addComponent(txtNo2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDate3)
                            .addComponent(txtNo3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDate4)
                            .addComponent(txtNo4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDate5)
                            .addComponent(txtNo5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDate6)
                            .addComponent(txtNo6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDate7)
                            .addComponent(txtNo7)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(136, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("No. of Patients Per Doctor", jPanel1);

        getContentPane().add(jTabbedPane1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listDoctorsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listDoctorsMouseClicked
        // TODO add your handling code here:
        int iddoctor=listDoctors.getSelectedIndex();
        
        showNo(iddoctor);
        
    }//GEN-LAST:event_listDoctorsMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DailyReportFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DailyReportFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DailyReportFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DailyReportFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DailyReportFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JList<String> listDoctors;
    private javax.swing.JLabel txtDate1;
    private javax.swing.JLabel txtDate2;
    private javax.swing.JLabel txtDate3;
    private javax.swing.JLabel txtDate4;
    private javax.swing.JLabel txtDate5;
    private javax.swing.JLabel txtDate6;
    private javax.swing.JLabel txtDate7;
    private javax.swing.JLabel txtNo1;
    private javax.swing.JLabel txtNo2;
    private javax.swing.JLabel txtNo3;
    private javax.swing.JLabel txtNo4;
    private javax.swing.JLabel txtNo5;
    private javax.swing.JLabel txtNo6;
    private javax.swing.JLabel txtNo7;
    // End of variables declaration//GEN-END:variables

    private void showDoctors() {
        List<Doctor> doctorList=medicalPersonnelHandler.getAllDoctors();
        
        DefaultListModel mod = new DefaultListModel();
        listDoctors.setModel(mod);

        for (int i = 0; i < doctorList.size(); i++) {
            mod.addElement(patientsHandler.getPerson(medicalPersonnelHandler.getMedicalPersonnel(doctorList.get(i).getMedicalPersonnelID()).getPersonID()).getFirstName());
        }
        
    }

    private void showNo(int iddoctor) {
        List<Patient> patients=patientsHandler.getPatientsByDoctor(iddoctor+1);
        
        
        Date date = new java.sql.Date(Calendar.getInstance().getTime().getTime());
        int d1=date.getDate();
        
        ArrayList<Integer> days=new ArrayList<Integer>();
        for (int i = 0; i < 7; i++) {
            if (d1-i>=1) {
                days.add(d1-i);
            }
        }
        int count[]=new int[days.size()];
        for (int i : count) {
            i=0;
        }
        
        //Appointment
        for (int z = 0; z < days.size(); z++) {
            for (int i = 0; i < patients.size(); i++) {
                List<Appointment> appointments=patientWorkHandler.getAppointmentsForPatient(patients.get(i).getIDPatient());
                    for (int j = 0; j < appointments.size(); j++) {
                        int day=appointments.get(j).getAppointmentDate().getDay();
                        if (days.get(z)==day) {
                            count[z]++;
                        }
                
                    }
            }
        }
        //MiniReg
        for (int z = 0; z < days.size(); z++) {
            for (int i = 0; i < patients.size(); i++) {
                MiniRegForm miniRegForm=miniRegFormHandler.getMiniRegForm(patients.get(i).getIDPatient());
                if (comprehensiveRegFormHandler.checkIfExistComprehensive(patients.get(i).getIDPerson())==0) {
                    if (miniRegFormHandler.chechIfMiniExist(patients.get(i).getIDPerson())>0) {
                        for (int j = 0; j < days.size(); j++) {
                            int day=miniRegForm.getRegDate().getDay();
                            System.out.println("Day: "+day+"  Days: "+days.get(z));
                            if (days.get(z)==day) {
                                count[z]++;
                            }
                        }
                    }
                }
                    
            }
        }
        
        for (int i = 0; i < count.length; i++) {
            labels[i].setText(count[i]+"");
        }
    }

    private void showNoFolowUp() {
        
    }

}

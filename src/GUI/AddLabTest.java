package GUI;

import BL.PatientWorkHandler;
import MODEL.PatientWork.ConsultingRecommended;
import MODEL.PatientWork.LabTest;
import MODEL.PatientWork.LabTestRecommended;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 *
 * @author Karlo
 */
public class AddLabTest extends javax.swing.JFrame {
    private int IDPatient;
    PatientWorkHandler patientWorkHandler=new PatientWorkHandler();
    List<LabTest> listaLabTests=patientWorkHandler.getAllLabTests();

    /**
     * Creates new form AddLabTest
     */
    public AddLabTest() {
        initComponents();
        loadLabTests();
        txtAlert.setVisible(false);
    }
    public AddLabTest(int idpatient) {
        initComponents();
        loadLabTests();
        IDPatient=idpatient;
        txtAlert.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        btnRecommend = new javax.swing.JButton();
        txtAlert = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Recommend Lab Test");

        jScrollPane1.setViewportView(jList1);

        btnRecommend.setText("Recommend");
        btnRecommend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecommendActionPerformed(evt);
            }
        });

        txtAlert.setForeground(new java.awt.Color(255, 51, 0));
        txtAlert.setText("Odaberite lab test!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtAlert)
                        .addGap(34, 34, 34)
                        .addComponent(btnRecommend))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel1))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(25, 25, 25)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRecommend)
                    .addComponent(txtAlert))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRecommendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecommendActionPerformed
        // TODO add your handling code here:
        if (jList1.getSelectedIndex()==-1) {
            txtAlert.setVisible(true);
        }
        else{
            recommendLabTest();
            txtAlert.setVisible(false);
            this.setVisible(false);
        }
    }//GEN-LAST:event_btnRecommendActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddLabTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddLabTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddLabTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddLabTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddLabTest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRecommend;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel txtAlert;
    // End of variables declaration//GEN-END:variables

    private void loadLabTests() {
        DefaultListModel mod=new DefaultListModel();
        jList1.setModel(mod);
        
        for (int i = 0; i < listaLabTests.size(); i++) {
            mod.addElement(listaLabTests.get(i).getLabTestName());
        }
    }

    private void recommendLabTest() {
        int selected=jList1.getSelectedIndex();
        patientWorkHandler.insertLabTestRecommended(new LabTestRecommended(listaLabTests.get(selected).getIDLabTest(), IDPatient));
    }
}
